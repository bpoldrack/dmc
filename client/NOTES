Validator does not validate hidden fields. So it is (for example) safe to mark
hidden, dependent input fields as "required."

Question dependencies are home-grown, which means the setup comes with all the
care and tender oddities that are a result of midnight coding sessions.
Briefly, this is the logic:
* Once a question is deemed to be valid, it will show the next question.
* If there's a value in the "data-next" attribute (e.g. "hours-group"; all end
  with "group") of the parent <li>, then that is the ID that will be shown. It
  is a bit odd to store this value in the <li>, but it's the location that
  involves the least amount of DOM traversal for other operations.
* If there's nothing in "data-next", then the next <li> will be shown.

* Some fields have dependencies. For these, we bind to the onChange event,
  examine the value, and then overwrite "data-next" as necessary.
* *Important note*. All fields that have dependencies, have data-next set
  assuming that no dependency will show. Only if dependency logic is met (in the
  above step) will data-next be overwritten to allow the flow into the deps.
* Also, the automatic question showing does not hide questions. So any questions
* which should be hidden, they need to be handled by the custom onChange
  function.

* The savvy reader will note that both the default showing and the custom
  function are bound to onChange. Which fires first? The first one defined
  fires, thus the default showing is applied last; thus preserving the order.

Example:

* Have Device?
  * Which OS?
    * if Linux, which distro?
    * if Other, what is it?
  * Usage of other device vs this device
* How many publications do you have?

(simplified HTML)
<li id="institute_device-group" data-next="#publications_number-group">
  <label>Shared Device</label>
  <select id="institute_device">
    <option>None</option>
    <option>Stuff</option>
  </select>
</li>
<li id="institute_OS-group" data-next="#personal_institute_usage-group">
  <label>What OS does the above device run?</label>
  <select id="institute_OS">
    <option>BeOS</option>
    <option>Linux</option>
    <option>Other</option>
  </select>
</li>
<li id="institute_OS_linux-group" data-next="#personal_institute_usage-group">
  <label>Which Distro</label>
  <select id="institute_OS_linux">
    <option>A</option>
    <option>B</option>
  </select>
</li>
<li id="institute_OS_other-group" data-next="#personal_institute_usage-group">
  <label>What "Other" OS?</label>
  <input id="institute_OS_other" type="text">
</li>
<li id="personal_institute_usage-group">
  <label>Usage Ratio</label>
  <select id="personal_institute_usage">
    <option>A</option>
    <option>B</option>
  </select>
</li>
<li id="publications_number-group">
  <label>What "Other" OS?</label>
  <input id="publications_number" type="number" min="0" step="1">
</li>

And the JS:

$("#institute_device").change(function() {
  var $parent_li = $(this).parents('li');
  if ( $(this).val() !== "None") {
    $parent_li.attr('data-next', '#institute_OS-group');
  } else {
    $("#institute_OS-group").hide("slow");
    $("#institute_OS_linux-group").hide("slow");
    $("#institute_OS_other-group").hide("slow");
    $("#personal_institute_usage-group").hide("slow");
    $parent_li.attr('data-next', '#publications_number-group');
  }
});
$("#institute_OS").change(function() {
  var $this = $(this);
  var $parent_li = $this.parents('li');

  if ($this.val() == 'Linux') {
    $("#institute_OS_other-group").hide("slow");
    $parent_li.attr('data-next', '#institute_OS_linux-group');
  } else if ($this.val() == 'Other') {
    $("#institute_OS_linux-group").hide("slow");
    $parent_li.attr('data-next', '#institute_OS_other-group');
  } else {
    $("#institute_OS_linux-group").hide("slow");
    $("#institute_OS_other-group").hide("slow");
    $parent_li.attr('data-next', '#personal_institute_usage-group');
  }
});
